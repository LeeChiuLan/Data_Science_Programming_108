for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, "li .rank-1")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0("li .rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 8   # get the top-10
for(i in 8:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 8   # get the top-10
for(i in 8:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- test
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
nodes
all_tag_nodes
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- test
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
head(all_tag_nodes)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- c(test)
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
all_tag_nodes
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- c(test)
all_tag_nodes
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
all_tag_nodes
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- c(test)
all_tag_nodes
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- rbind(all_tag_nodes, nodes)
}
all_tag_nodes
library(dplyr)
library(tmcn)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
library(rvest)
library(xml2)
library(rvest)
# 抓取整個頁面內容
full_page <- read_html("https://sports.ltn.com.tw/basketball/")
full_page
#找出在資料在頁面中的位置後提取資料
tag_nodes <-  html_nodes(full_page, ".boxTitle .listA .list_title")
head(tag_nodes)
title <- html_text(tag_nodes) %>% iconv("UTF-8")
head(title)
str(title)
# 開始斷詞
cutter <- worker()
ccset<-cutter[title]
head(ccset)
# 轉成data.frame
raw_data <- data.frame(ccset %>% table)
head(raw_data)
# 排序 Top-6
raw_data[order(raw_data$Freq,decreasing = TRUE),]
freq <- table(raw_data)
head(sort(freq, decreasing=T))
wordcloud(names(freq), freq, min.freq = 1, scale=c(4,.2), max.words=200, random.order=FALSE, colors=brewer.pal(5,"Dark2"))
freq <- table(raw_data)
wordcloud(freg)
freq <- table(raw_data)
wordcloud(freq)
freq <- table(raw_data)
head(freq)
freq <- table(raw_data)
head(sort(freq, decreasing=T))
?worker
freq <- table(raw_data)
head(sort(freq, decreasing=T))
freq <- table(title)
head(sort(freq, decreasing=T))
wordcloud(freq, freq, min.freq = 1, scale=c(4,.2), max.words=200, random.order=FALSE, colors=brewer.pal(5,"Dark2"))
freq <- table(ccset)
head(sort(freq, decreasing=T))
wordcloud(freq, freq, min.freq = 1, scale=c(4,.2), max.words=200, random.order=FALSE, colors=brewer.pal(5,"Dark2"))
table(ccset)
data_in_table <- table(ccset)
# 轉成data.frame
raw_data <- data.frame(data_in_table)
head(raw_data)
library(dplyr)
library(tmcn)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
library(rvest)
library(xml2)
library(rvest)
# 抓取整個頁面內容
full_page <- read_html("https://sports.ltn.com.tw/basketball/")
full_page
#找出在資料在頁面中的位置後提取資料
tag_nodes <-  html_nodes(full_page, ".boxTitle .listA .list_title")
head(tag_nodes)
title <- html_text(tag_nodes) %>% iconv("UTF-8")
head(title)
str(title)
# 開始斷詞
cutter <- worker("tag")
itemName<-cutter[title]
head(itemName)
# table
data_in_table <- table(itemName)
# 轉成data.frame
raw_data <- data.frame(data_in_table)
head(raw_data)
# 排序 Top-6
raw_data[order(raw_data$Freq,decreasing = TRUE),]
# 文字雲
head(sort(data_in_table, decreasing=T))
wordcloud(data_in_table$itemName, data_in_table$Freq, min.freq = 1, scale=c(4,.2), max.words=200, random.order=FALSE, colors=brewer.pal(5,"Dark2"))
# 新增字典
dic = c("HBL")
new_user_word(cutter,dic)
library(dplyr)
library(tmcn)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
library(rvest)
library(xml2)
library(rvest)
# 抓取整個頁面內容
full_page <- read_html("https://sports.ltn.com.tw/basketball/")
full_page
#找出在資料在頁面中的位置後提取資料
tag_nodes <-  html_nodes(full_page, ".boxTitle .listA .list_title")
head(tag_nodes)
title <- html_text(tag_nodes) %>% iconv("UTF-8")
head(title)
str(title)
# 開始斷詞
cutter <- worker("tag")
itemName<-cutter[title]
head(itemName)
# table
data_in_table <- table(itemName)
# 轉成data.frame
raw_data <- data.frame(data_in_table)
head(raw_data)
# 排序 Top-6
raw_data[order(raw_data$Freq,decreasing = TRUE),]
# 文字雲
head(sort(data_in_table, decreasing=T))
wordcloud(data_in_table$itemName, data_in_table$Freq,
min.freq = 1, max.words=200, scale=c(4,.2),
random.order=FALSE, colors=brewer.pal(5,"Dark2"))
wordcloud(raw_data$itemName, raw_data$Freq,
min.freq = 1, max.words=200, scale=c(4,.2),
random.order=FALSE, colors=brewer.pal(5,"Dark2"))
par(family=(“Heiti TC Light”))
par(family=(“Heiti TC Light”))
par(family=("Heiti TC Light"))
wordcloud(raw_data$itemName, raw_data$Freq,
min.freq = 1, max.words=200, scale=c(4,.2),
random.order=FALSE, colors=brewer.pal(5,"Dark2"))
raw_data[order(raw_data$Freq,decreasing = TRUE),]
head(raw_data[order(raw_data$Freq,decreasing = TRUE),])
library(dplyr)
library(ggplot2)
library(ggmap)
stopifnot(has_google_key()){
cat("register_google(key =\"xxxxx....\") Firstly")
}
has_google_key()
google_key()
library(dplyr)
library(readxl)
index <- 3
sites <- c('士林','大同','中山','古亭','松山','陽明','萬華')
#colorSet <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00")
colorSet <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
siteName <- sites[index]
plotColor <- colorSet[index]
df <- read_excel(paste0("../Datasets/", siteName ,".xlsx"))
dim(df)
# remove the row which value is "NR"
selector = rowSums(df[4:27] == "NR") == 0
df<-df[selector, ]
dim(df)
# remove the row which value is ""
selector = rowSums(df[4:27] == "") == 0
df<-df[selector, ]
dim(df)
# add weekday
Sys.setlocale("LC_TIME", "en_US")
colnames(df)[1] <- "Date"
df$WeekDay <- weekdays(as.Date(df$Date))
df$WeekDay <- ordered(df$WeekDay, levels=c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saterday", "Sunday"))
# add Month
df <- df %>% mutate(Month = months(Date))
# select the PM2.5 only
pm25data <- df[df[3] == "PM2.5",]
dim(pm25data)
pm25data
# remove NA
pm25data <- pm25data[complete.cases(pm25data), ]
pm25data
pm25data[,4:27]<-lapply(pm25data[,4:27], function(x) as.numeric(as.character(x)))
pm25data <- pm25data[complete.cases(pm25data), ]  # once again to remove NA
pm25data$meansValue <- rowMeans(pm25data[,4:27]) %>% round(digits = 2)
library(ggplot2)
ggplot(data = pm25data, aes(x=Date, y= meansValue)) + geom_line(color=plotColor) +
theme(text=element_text(family="黑體-繁 中黑", size=14)) +
labs(title=paste0("PM2.5 - [日]   ",siteName,"測站"), caption="source: mpg")
# 星期平均 by Year
library(plyr)
df_PM25_WK <- ddply(pm25data, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
print(df_PM25_WK)
g <- ggplot(df_PM25_WK, aes(x=WeekDay, y=Rate_PM25, label = Rate_PM25)) +
geom_bar(stat="identity", width=.5, fill=plotColor) +
labs(title=paste0("PM2.5 - [2018年]   ",siteName,"測站"),
caption="source: mpg") +
theme(text=element_text(family="黑體-繁 中黑", size=14),axis.text.x = element_text(angle=60, hjust=1))
g + geom_text(aes(label = Rate_PM25),size = 4, hjust = 0.5, vjust = 3, position=position_dodge(width=0.9), vjust=-0.25)
month_levels <- c("January","February","March","April","May","June","July","August","September","October","November","December")
pm25data_M1 <- pm25data[pm25data$Month == month_levels[1],]
pm25data_M2 <- pm25data[pm25data$Month == month_levels[2],]
pm25data_M3 <- pm25data[pm25data$Month == month_levels[3],]
pm25data_M4 <- pm25data[pm25data$Month == month_levels[4],]
pm25data_M5 <- pm25data[pm25data$Month == month_levels[5],]
pm25data_M6 <- pm25data[pm25data$Month == month_levels[6],]
pm25data_M7 <- pm25data[pm25data$Month == month_levels[7],]
pm25data_M8 <- pm25data[pm25data$Month == month_levels[8],]
pm25data_M9 <- pm25data[pm25data$Month == month_levels[9],]
pm25data_M10 <- pm25data[pm25data$Month == month_levels[10],]
pm25data_M11 <- pm25data[pm25data$Month == month_levels[11],]
pm25data_M12 <- pm25data[pm25data$Month == month_levels[12],]
# 星期平均 by Month
mdf <- pm25data_M1
df_PM25_WK_M1 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M2
df_PM25_WK_M2 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M3
df_PM25_WK_M3 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M4
df_PM25_WK_M4 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M5
df_PM25_WK_M5 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M6
df_PM25_WK_M6 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M7
df_PM25_WK_M7 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M8
df_PM25_WK_M8 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M9
df_PM25_WK_M9 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M1
df_PM25_WK_M1 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M10
df_PM25_WK_M10 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M11
df_PM25_WK_M11 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M12
df_PM25_WK_M12 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
setwd("~/Desktop/New_GitHub/Data_Science_Programming_108/Samples")
library(dplyr)
library(readxl)
index <- 3
sites <- c('士林','大同','中山','古亭','松山','陽明','萬華')
#colorSet <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00")
colorSet <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
siteName <- sites[index]
plotColor <- colorSet[index]
df <- read_excel(paste0("../Datasets/", siteName ,".xlsx"))
dim(df)
# remove the row which value is "NR"
selector = rowSums(df[4:27] == "NR") == 0
df<-df[selector, ]
dim(df)
# remove the row which value is ""
selector = rowSums(df[4:27] == "") == 0
df<-df[selector, ]
dim(df)
# add weekday
Sys.setlocale("LC_TIME", "en_US")
colnames(df)[1] <- "Date"
df$WeekDay <- weekdays(as.Date(df$Date))
df$WeekDay <- ordered(df$WeekDay, levels=c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saterday", "Sunday"))
# add Month
df <- df %>% mutate(Month = months(Date))
# select the PM2.5 only
pm25data <- df[df[3] == "PM2.5",]
dim(pm25data)
pm25data
# remove NA
pm25data <- pm25data[complete.cases(pm25data), ]
pm25data
pm25data[,4:27]<-lapply(pm25data[,4:27], function(x) as.numeric(as.character(x)))
pm25data <- pm25data[complete.cases(pm25data), ]  # once again to remove NA
pm25data$meansValue <- rowMeans(pm25data[,4:27]) %>% round(digits = 2)
library(ggplot2)
ggplot(data = pm25data, aes(x=Date, y= meansValue)) + geom_line(color=plotColor) +
theme(text=element_text(family="黑體-繁 中黑", size=14)) +
labs(title=paste0("PM2.5 - [日]   ",siteName,"測站"), caption="source: mpg")
# 星期平均 by Year
library(plyr)
df_PM25_WK <- ddply(pm25data, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
print(df_PM25_WK)
g <- ggplot(df_PM25_WK, aes(x=WeekDay, y=Rate_PM25, label = Rate_PM25)) +
geom_bar(stat="identity", width=.5, fill=plotColor) +
labs(title=paste0("PM2.5 - [2018年]   ",siteName,"測站"),
caption="source: mpg") +
theme(text=element_text(family="黑體-繁 中黑", size=14),axis.text.x = element_text(angle=60, hjust=1))
g + geom_text(aes(label = Rate_PM25),size = 4, hjust = 0.5, vjust = 3, position=position_dodge(width=0.9), vjust=-0.25)
month_levels <- c("January","February","March","April","May","June","July","August","September","October","November","December")
pm25data_M1 <- pm25data[pm25data$Month == month_levels[1],]
pm25data_M2 <- pm25data[pm25data$Month == month_levels[2],]
pm25data_M3 <- pm25data[pm25data$Month == month_levels[3],]
pm25data_M4 <- pm25data[pm25data$Month == month_levels[4],]
pm25data_M5 <- pm25data[pm25data$Month == month_levels[5],]
pm25data_M6 <- pm25data[pm25data$Month == month_levels[6],]
pm25data_M7 <- pm25data[pm25data$Month == month_levels[7],]
pm25data_M8 <- pm25data[pm25data$Month == month_levels[8],]
pm25data_M9 <- pm25data[pm25data$Month == month_levels[9],]
pm25data_M10 <- pm25data[pm25data$Month == month_levels[10],]
pm25data_M11 <- pm25data[pm25data$Month == month_levels[11],]
pm25data_M12 <- pm25data[pm25data$Month == month_levels[12],]
# 星期平均 by Month
mdf <- pm25data_M1
df_PM25_WK_M1 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M2
df_PM25_WK_M2 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M3
df_PM25_WK_M3 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M4
df_PM25_WK_M4 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M5
df_PM25_WK_M5 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M6
df_PM25_WK_M6 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M7
df_PM25_WK_M7 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M8
df_PM25_WK_M8 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M9
df_PM25_WK_M9 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M1
df_PM25_WK_M1 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M10
df_PM25_WK_M10 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M11
df_PM25_WK_M11 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
mdf <- pm25data_M12
df_PM25_WK_M12 <- ddply(mdf, .(WeekDay), summarize, Rate_PM25=mean(meansValue)%>%round(digits = 2))
