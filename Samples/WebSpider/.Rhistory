#head(sitedata)
# rename the specified columns' name
names(sitedata)[names(sitedata) == "Longitude"] <- "Px"
names(sitedata)[names(sitedata) == "Latitude"] <- "Py"
# add a column - "Description"
Description=""
sitedata = cbind(sitedata, Description)
head(sitedata)
dim(sitedata)
#--------------- [DataSet] restaurant ---------------
restaurantdata <- select(restaurantdata_raw, Name, Px, Py, Description)
head(restaurantdata)
dim(restaurantdata)
# merge [sie], [restaurant]
data = rbind(restaurantdata, sitedata)
dim(data)
library(kableExtra)
kable(head(data))
summary(data)
library(ggmap)
library(ggplot2)
library(ggmap)
register_google(key="AIzaSyAs0bekp6w-GMQbZUtnvCaRMPOaFYlS7R0")
library(leaflet)
install.packages("leaflet")
library(leaflet)
geocode("Taiwan") %>% leaflet()
geocode("Taiwan")
leaflet(geocode("Taiwan"))
register_google(key="AIzaSyAs0bekp6w-GMQbZUtnvCaRMPOaFYlS7R0", write = TRUE)
has_google_key()
google_key()
has_google_client()
has_google_signature()
devtools::install_github("dkahle/ggmap")
library(ggmao)
library(ggmap)
library(devtools)
register_google()
leaflet(geocode("Taiwan"))
library(ggmap)
library(ggplot2)
library(ggmap)
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
register_google()
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
has_google_key()
register_google(key = "AIzaSyAs0bekp6w-GMQbZUtnvCaRMPOaFYlS7R0")
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
register_google(key = "AIzaSyAs0bekp6w-GMQbZUtnvCaRMPOaFYlS7R0", write = TRUE)
has_google_key()
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
ggmap(twmap)
library(ggplot2)
library(ggmap)
has_google_key()
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
ggmap(twmap)
library(ggplot2)
library(ggmap)
if(has_google_key()){
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
ggmap(twmap)
}
library(ggplot2)
library(ggmap)
if(has_google_key()){
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
ggmap(twmap)
}else
{
message("register_google(key =\"xxxxx....\") Firstly")
}
message("register_google(key =\"xxxxx....\") Firstly")
message("register_google(key =\"xxxxx....\") Firstly")
print("register_google(key =\"xxxxx....\") Firstly")
print("register_google(key =\"xxxxx....\") Firstly")
cat("register_google(key =\"xxxxx....\") Firstly")
cat("register_google(key =\"xxxxx....\") Firstly")
print("register_google(key =\"xxxxx....\") Firstly")
# add a column - "Description"
Description=""
library(dplyr)
restaurantfile <- "/Users/linda/Desktop/CS+X-108/20190711/convertcsv.csv"
#sitefile <- "/Users/linda/Desktop/CS+X-108/20190711/空氣品質監測站Eng.csv"
restaurantdata_raw<-read.csv(restaurantfile, header=T, sep=",")
dim(restaurantdata_raw)
head(restaurantdata_raw)
#sitedata<-read.csv(sitefile, header=T, sep=",")  # failed to read like this since the file name is in Chinese
sitedata_raw<-read.csv("/Users/linda/Desktop/CS+X-108/20190711/空氣品質監測站Eng.csv", header=T, sep=",")
dim(sitedata_raw)
head(sitedata_raw)
#--------------- [DataSet] site ---------------
sitedata <- select(sitedata_raw, Name, Longitude,Latitude)
sitedata = sitedata[sitedata$Name != "",]    # remove empty row
dim(sitedata)
sitedata$Name <- paste(sitedata$Name,"Site", sep="_")   #append "Site" to each $Name
#head(sitedata)
# add a column - "Description"
Description=""
sitedata = cbind(sitedata, Description)
head(sitedata)
dim(sitedata)
#--------------- [DataSet] restaurant ---------------
restaurantdata <- select(restaurantdata_raw, Name, Px, Py, Description)
# rename the specified columns' name
names(restaurantdata)[names(restaurantdata) == "Px"] <- "Longitude"
names(restaurantdata)[names(restaurantdata) == "Py"] <- "Latitude"
head(restaurantdata)
dim(restaurantdata)
# merge [sie], [restaurant]
data = rbind(restaurantdata, sitedata)
dim(data)
library(kableExtra)
kable(head(data))
summary(data)
library(ggplot2)
library(ggmap)
stopifnot(has_google_key()){
cat("register_google(key =\"xxxxx....\") Firstly")
}
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
sitedata_raw<-read.csv("/Users/linda/Desktop/CS+X-108/20190711/空氣品質監測站Eng.csv", header=T, sep=",")
SiteMap <- ggmap(twmap)+geom_point(data = sitedata_raw, aes(x=Longitude, y=Latitude,size=3.5))
SiteMap
library(ggplot2)
library(ggmap)
stopifnot(has_google_key()){
cat("register_google(key =\"xxxxx....\") Firstly")
}
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW")
ggmap(twmap)
sitedata_raw<-read.csv("/Users/linda/Desktop/CS+X-108/20190711/空氣品質監測站Eng.csv", header=T, sep=",")
sitedata <- select(sitedata_raw, Name, Longitude,Latitude)
sitedata = sitedata[sitedata$Name != "",]    # remove empty row
SiteMap <- ggmap(twmap)+geom_point(data = sitedata, aes(x=Longitude, y=Latitude,size=3.5))
SiteMap
sitedata_raw<-read.csv("/Users/linda/Desktop/CS+X-108/20190711/空氣品質監測站Eng.csv", header=T, sep=",")
sitedata <- select(sitedata_raw, Name, Longitude,Latitude)
sitedata = sitedata[sitedata$Name != "",]    # remove empty row
SiteMap <- ggmap(twmap, darken = c(1,"green")) + geom_point(data = sitedata, aes(x = Longitude, y = Latitude), color="red")
SiteMap
SiteMap <- ggmap(twmap, darken = c(1,"white")) + geom_point(data = sitedata, aes(x = Longitude, y = Latitude), color="red")
SiteMap
SiteMap <- ggmap(twmap, darken = c(0.5,"white")) + geom_point(data = sitedata, aes(x = Longitude, y = Latitude), color="red")
SiteMap
SiteMap <- ggmap(twmap) + geom_point(data = sitedata, aes(x = Longitude, y = Latitude), color="red")
#SiteMap <- ggmap(twmap, darken = c(0.5,"white")) + geom_point(data = sitedata, aes(x = Longitude, y = Latitude), color="red")
SiteMap
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58),zoom = 7, language = "zh-TW", maptype="roadmap")
#ggmap(twmap)
SiteMap <- ggmap(twmap) + geom_point(data = sitedata, aes(x = Longitude, y = Latitude), color="red")
#SiteMap <- ggmap(twmap, darken = c(0.5,"white")) + geom_point(data = sitedata, aes(x = Longitude, y = Latitude), color="red")
SiteMap
?apply(array, margin, ...)
library(dplyr)
library(rvest)
library(wordcloud)
install.packages("wordcloud")
install.packages("xml2")
library(dplyr)
library(rvest)
library(wordcloud)
install.packages("RColorBrewer")
install.packages("xml2")
install.packages("RColorBrewer")
library(dplyr)
library(rvest)
library(wordcloud)
library(xml2)
library(dplyr)
library(rvest)
library(wordcloud)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
all_tag_nodes <- character(0)
rank <- 10   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
head(all_tag_nodes)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
all_tag_nodes <- character(0)
rank <- 10   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
rank_tag
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
head(all_tag_nodes)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
all_tag_nodes <- character(0)
rank <- 10   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
head(all_tag_nodes)
cat(nodes)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test=html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 10   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
head(all_tag_nodes)
source('~/Desktop/GitHub/Data_Science_Programming_108/Samples/WebSpider/BlogsMedical.R')
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 10   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
head(all_tag_nodes)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- test
rank <- 10   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
head(all_tag_nodes)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
all_tag_nodes
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, "li .rank-1")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0("li .rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- character(0)
rank <- 1   # get the top-10
for(i in 1:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 8   # get the top-10
for(i in 8:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
#all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-8")
test
all_tag_nodes <- character(0)
rank <- 8   # get the top-10
for(i in 8:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- c(all_tag_nodes, nodes)
}
nodes
all_tag_nodes[1]
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- test
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
nodes
all_tag_nodes
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- test
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
head(all_tag_nodes)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- c(test)
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
all_tag_nodes
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- c(test)
all_tag_nodes
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
append(all_tag_nodes, nodes)
}
all_tag_nodes
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- c(test)
all_tag_nodes
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- rbind(all_tag_nodes, nodes)
}
all_tag_nodes
Sys.setenv(LANGUAGE="en")
setwd("~/Desktop/GitHub/Data_Science_Programming_108/Samples/WebSpider")
View(all_tag_nodes)
View(data)
library(dplyr)
library(xml2)
library(rvest)
library(wordcloud)
full_page <- read_html("https://www.pixnet.net/blog/articles/category/33")
full_page
test <- html_node(full_page, ".rank-1")
test
all_tag_nodes <- c(test)
all_tag_nodes
rank <- 10   # get the top-10
for(i in 2:rank){
rank_tag <- paste0(".rank-",i)
cat(rank_tag)
nodes <- html_node(full_page, rank_tag)
all_tag_nodes <- add_row(all_tag_nodes, nodes)
}
all_tag_nodes
View(test)
View(x.mat)
